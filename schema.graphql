### Tickers and Positions

# Ticker entity represents unique derivative params
type Ticker @entity {
  # derivative hash
  id: ID!
  # LibDerivative.Derivative-related data
  margin: BigInt!
  endTime: BigInt!
  params: [BigInt!]!
  oracleId: Bytes!
  token: Bytes!
  syntheticId: Bytes!
  # positions-data
  longPosition: Position!
  shortPosition: Position!
  # on-chain action-related metadata
  createdAt: BigInt!
  createdTx: Bytes!
}

# Position entity represents specific LONG / SHORT position params and data of the derivative
type Position @entity {
  # position's address
  id: ID!
  # erc20-related data
  name: String!
  symbol: String!
  totalSupply: BigInt!
  # ticker-related data
  isLong: Boolean!
  ticker: Ticker!
  endTime: BigInt!
}

# Holder entity represents Positions holders
type Holder @entity {
  # account's address
  id: ID!
  # positions-related data
  positions: [HolderPosition!]! @derivedFrom(field: "holder")
  # on-chain action-related metadata
  createdAt: BigInt!
  createdTx: Bytes!
}

# HolderPosition entity connects Holders to Positions through Ticker
type HolderPosition @entity {
  # Holder id + Ticker id
  # `${holder.id}:${ticker.id}`
  id: ID!
  holder: Holder!
  ticker: Ticker!
  longBalance: BigInt!
  shortBalance: BigInt!
}

### Oracles
type OracleId @entity {
  # oracleId's account address
  id: ID!
  oracleData: [OracleData!] @derivedFrom(field: "oracleId")
}

type OracleData @entity {
  # oracleId's account address + timestamp
  id: ID!
  oracleId: OracleId!
  timestamp: BigInt!
  data: BigInt!
  # on-chain action-related metadata
  createdAt: BigInt!
  createdTx: Bytes!
}
